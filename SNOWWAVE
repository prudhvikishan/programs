#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#define getcx getchar_unlocked
#ifndef ONLINE_JUDGE
    #define getcx getchar
#endif
using namespace std;
inline void string(char *str)
{
    register char c = 0;
    register int i = 0;
    while (c < 33)
        c = getcx();
    while (c != '\n') {
        str[i] = c;
        c = getcx();
        i = i + 1;
    }
    str[i] = '\0';
}
inline int inp()
{
   int n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}
inline long long in()
{
   long long n=0;
   long long ch=getcx();long long sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}
 
const int inf = 2000000000;
int a[1000005];
int longest;
inline void find(int x)
{
    int left = 1, right = longest;
    while(left <= right)
    {
        int mid = (left + right) >> 1;
        if(a[mid] <= x)
        {
            left = mid + 1;
        }
        else
        {
            right = mid - 1;
        }
    }
    a[++right] = x;
    if(right > longest)
        longest = right;
}
int main() {
    int n;
    n = in();
    for(int i = 0; i < n; ++i)
    {
        a[i] = inf;
    }
    longest = 0;
    for(int i = 1; i <= n; ++i)
    {
        int x;
        x = in();
        if((x -= i) >= 0)
            find(x);        
    }
    cout << n - longest << endl;
 
    return 0;
} 
